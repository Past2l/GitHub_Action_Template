name: Docker Project Build & Deploy

on:
  push:
    branches: [ main ]

env:
  VERSION: ${{ github.sha }}
  OWNER: ${{ github.repository_owner }}
  REPO: ${{ github.repository }}
  REPO_NAME: ${{ github.event.repository.name }}
  HOST_PORT: 3000
  CONTAINER_PORT: 3000
  
jobs:
  build_deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setting Environment
        id: env
        run: |
          echo "OWNER=${OWNER,,}" >> $GITHUB_OUTPUT
          echo "REPO=${REPO,,}" >> $GITHUB_OUTPUT
          echo "REPO_NAME=${REPO_NAME,,}" >> $GITHUB_OUTPUT
      - name: Connect Server & Run Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            rm -rf ~/.deploy_temp
            mkdir ~/.deploy_temp && cd ~/.deploy_temp
            git clone https://${{ secrets.GHCR_TOKEN }}@github.com/${{ steps.env.outputs.REPO }}.git
            cd ${{ steps.env.outputs.REPO_NAME }}
            echo -e "${{ secrets.ENV }}" > .env
            docker build --no-cache --progress=plain --tag ${{ steps.env.outputs.REPO_NAME }}:latest .
            docker stop ${{ steps.env.outputs.REPO_NAME }} || true
            docker rm ${{ steps.env.outputs.REPO_NAME }} || true
            docker run -d -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} --env-file=.env --name ${{ steps.env.outputs.REPO_NAME }} --restart always ${{ steps.env.outputs.REPO_NAME }}:latest
            docker buildx prune -af
            docker image prune -af
            rm -rf ~/.deploy_temp